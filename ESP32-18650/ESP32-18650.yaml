substitutions:
  name_of_device:       esp32-18650
  device_name_friendly: ESP32-18650

esphome:
  name:          $name_of_device
  friendly_name: $device_name_friendly

esp32:
  board: esp32dev
  framework:
    type: arduino

output:
  - platform: gpio
    pin:      2
    id:       onboard_led

light:
  - platform: binary
    name:     "Built-in LED"
    output:   onboard_led
    id:       led_light

# Enable logging
logger:
  level: VERBOSE
  logs:
    mqtt.component: ERROR
    mqtt.client:    ERROR

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  password: !secret ota_password

wifi:
  networks:
    - ssid: !secret     wifi_ssid
      password: !secret wifi_password
    - ssid: !secret     wifi_ssid_backup
      password: !secret wifi_password
  ap:
    ssid:             "$device_name_friendly hotspot"
    password: !secret default_password

mqtt:
  broker: !secret broker_address
  on_connect:
    then:
      - light.turn_on: led_light
  on_disconnect:
    then:
      - light.turn_off: led_light
  topic_prefix:   "$mqtt_location/{mac_address}"

captive_portal:


binary_sensor:
  - platform: status
    name:     $device_name_friendly status

sensor:
  - platform:        wifi_signal
    name:            $device_name_friendly Wi-Fi strength
    update_interval: 20s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: $device_name_friendly IP address
      id:   ip_address
      on_value:
        - mqtt.publish:
            topic:           "$mqtt_location/{mac_address}/ip"
            payload: !lambda |-
                             return to_string( id( ip_address ).state );
    ssid:
      name: $device_name_friendly connected SSID
    bssid:
      name: $device_name_friendly connected BSSID
    mac_address:
      name: $device_name_friendly MAC Address
      id:   text_sensor_mac_address
    scan_results:
      name: $device_name_friendly scan results

interval:
  - interval: 1min
    then:
      - mqtt.publish:
          topic:           "$mqtt_location/$device_name_friendly/mac"
          payload: !lambda |-
                           return to_string( id( text_sensor_mac_address ).state );
      - mqtt.publish:
          topic:           "$mqtt_location/$mqtt_device/ip"
          payload: !lambda |-
                           return to_string( id( ip_address ).state );
