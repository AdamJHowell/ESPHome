substitutions:
  name_of_device:       familyroom8266
  device_name_friendly: FamilyRoom8266
  mqtt_location:        "FamilyRoom"
  mqtt_device:          "esp8266"
  mqtt_sensor:          "sht21d"

esphome:
  name:          $name_of_device
  friendly_name: $device_name_friendly
  includes:
    - DFRobot_SHT20.h
    - DFRobot_SHT20.cpp
    - SHT20.h

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

ota:
  password: !secret ota_password

wifi:
  networks:
    - ssid: !secret     wifi_ssid
      password: !secret wifi_password
    - ssid: !secret     wifi_ssid_backup
      password: !secret wifi_password
  ap:
    ssid:             "$device_name_friendly hotspot"
    password: !secret default_password

captive_portal:

i2c:
  sda:       4
  scl:       5
  scan:      true
  frequency: 400kHz

mqtt:
  broker: !secret broker_address
  topic_prefix: "$mqtt_location/{mac_address}"

text_sensor:
  - platform:        wifi_info
    ip_address:
      name: $device_name_friendly IP address
    ssid:
      name: $device_name_friendly connected SSID
    bssid:
      name: $device_name_friendly connected BSSID
    mac_address:
      name: $device_name_friendly MAC Address
      id:   text_sensor_mac_address
    scan_results:
      name: $device_name_friendly scan results

sensor:
  - platform:            wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name:                "WiFi Signal dB"
    id:                  wifi_signal_db
    unit_of_measurement: "dB"
    accuracy_decimals:   2
    update_interval:     20s
    entity_category:     "diagnostic"
    on_value:
      - mqtt.publish:
          topic:           "$mqtt_location/$mqtt_device/rssi"
          payload: !lambda |-
                           return to_string( id( wifi_signal_db ).state );
  # - platform: copy # Reports the WiFi signal strength in %
  #   source_id: wifi_signal_db
  #   name: "WiFi Signal Percent"
  #   filters:
  #     - lambda: return min( max( 2 * ( x + 100.0 ), 0.0 ), 100.0 );
  #   unit_of_measurement: "%"
  #   accuracy_decimals: 2
  #   entity_category: "diagnostic"
  - platform: custom
    lambda:   |-
              auto sht20 = new SHT20();
              App.register_component( sht20 );
              return {sht20->temperature_sensor, sht20->humidity_sensor};
    sensors:
      - name:                "Temperature"
        id:                  inside_temp
        unit_of_measurement: "Â°F"
        accuracy_decimals:   2
        filters:
          - filter_out: 998.00  # This sensor erroneously returns 998 sometimes.
          - lambda: return ( x * 1.8 ) + 32.0;
        on_value:
          - mqtt.publish:
              topic:           "$mqtt_location/$mqtt_device/$mqtt_sensor/temperature"
              payload: !lambda |-
                               return to_string( id( inside_temp ).state );
      - name:                "Humidity"
        id:                  inside_humidity
        unit_of_measurement: "%"
        accuracy_decimals:   2
        filters:
          - filter_out: 998.00  # This sensor erroneously returns 998 sometimes.
        on_value:
          - mqtt.publish:
              topic:           "$mqtt_location/$mqtt_device/$mqtt_sensor/humidity"
              payload: !lambda |-
                               return to_string( id( inside_humidity ).state );

interval:
  - interval: 1min
    then:
      - mqtt.publish:
          topic:           "$mqtt_location/$device_name_friendly/mac"
          payload: !lambda |-
                           return to_string( id( text_sensor_mac_address ).state );
