substitutions:
  name_of_device:           esp32-energy
  device_name_friendly:     ESP32-Energy
  mqtt_location:            "FurnaceRoom"
  mqtt_device:              $device_name_friendly
  api_password: !secret     furnace_esp32_energy_api
  ota_password: !secret     furnace_esp32_energy_ota
  wifi_ssid: !secret        wifi_ssid
  wifi_pass: !secret        wifi_password
  wifi_ssid_backup: !secret wifi_ssid_backup
  wifi_pass_backup: !secret wifi_password
  broker_address: !secret   broker_address
  led_gpio:                 GPIO2

esphome:
  name:          $name_of_device
  friendly_name: $device_name_friendly
  platform:      ESP32
  board:         esp32dev

#wifi:
#  networks:
#    - ssid: !secret     wifi_ssid
#      password: !secret wifi_password

#  manual_ip:
#    static_ip: 192.168.0.223
#    gateway:   192.168.0.1
#    subnet:    255.255.255.0

#captive_portal:
#
#api:
#  encryption:
#    key: !secret encryption_key_esp32_energy
#
#ota:
#  password: !secret ota_password_esp32_energy

# Enable various sensors.
sensor:
  - !include Components/Sensors/wifi_signal.yaml
  - !include Components/Sensors/wifi_signal_percent.yaml
  - !include Components/Sensors/uptime.yaml

  - platform:        adc
    pin:             GPIO36
    id:              adc_sensor
    attenuation:     11db
    update_interval: 10s

  - platform:          ct_clamp
    sensor:            adc_sensor
    name:              "Raw ADC value"
    update_interval:   10s
    accuracy_decimals: 5

  - platform:          ct_clamp
    sensor:            adc_sensor
    sample_duration:   300ms
    name:              "Amperes"
    update_interval:   10s
    accuracy_decimals: 3
    filters:
      - calibrate_linear:
          - 0.0097 -> 0
          - 0.1485 -> 1.746    # Value from KillAWatt

  - platform:            ct_clamp
    sensor:              adc_sensor
    sample_duration:     300ms
    name:                "Kilowatts"
    id:                  esp_watts
    update_interval:     10s
    accuracy_decimals:   3
    filters:
      - calibrate_linear:
          - 0.003 -> 0
          - 0.147 -> 8.63    # Value from KillAWatt
      - lambda: return x * 230.0 / 1000;
    unit_of_measurement: "Kw"

#  - platform:            total_daily_energy        # This sensor will give you a Daily kW reading
#    name:                "Total Daily Energy"
#    unit_of_measurement: 'kWh'
#    power_id:            esp_watts
#    accuracy_decimals:   3
#    filters:
#    device_class:        energy

# Enable I2C communication.
i2c:
  - !include Components/Core/i2c_esp32.yaml

# Enable Wi-Fi.
wifi:
  !include Components/Core/wifi.yaml

# Enable the Home Assistant native API.
api:
  !include Components/Core/api.yaml

# Enable OTA updates.
ota:
  !include Components/Core/ota.yaml

# Enable logging.
logger:
  !include Components/Core/logger.yaml

# Enable MQTT publishing.
mqtt:
  !include Components/Core/mqtt.yaml

# The text_sensor handles many MQTT publishing duties.
text_sensor:
  - !include Components/TextSensor/wifi_info.yaml

# The interval component handles many MQTT publishing duties.
interval:
  !include Components/Core/interval.yaml

# Enable the onboard LED as diagnostic output.
status_led:
  !include Components/Core/status_led.yaml

# Expose the node state for Home Assistant.
binary_sensor:
  - !include Components/BinarySensors/status.yaml
