substitutions:
  name_of_device:           t-displays3
  device_name_friendly:     T-Display-S3
  mqtt_location:            "Mobile"
  mqtt_device:              $device_name_friendly
  api_password: !secret     lilygo_t_display_s3_api
  ota_password: !secret     lilygo_t_display_s3_ota
  wifi_ssid: !secret        wifi_ssid
  wifi_pass: !secret        wifi_password
  wifi_ssid_backup: !secret wifi_ssid_backup
  wifi_pass_backup: !secret wifi_password
  broker_address: !secret   broker_address
  led_gpio:                 GPIO2

esphome:
  name:          ${name_of_device}
  friendly_name: $device_name_friendly
  platformio_options:
    board_build.mcu:                 esp32s3
    board_build.name:                "Espressif ESP32-S3-T-QT"
    board_build.upload.flash_size:   "4MB"
    board_build.upload.maximum_size: 4194304
    board_build.vendor:              "LilyGO"
  on_boot:
    - priority: 800
      then:
        - lambda: |-
                  id(disp).enable();
                  id(disp).transfer_byte(0x11);
                  id(disp).disable();

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

spi:
  clk_pin:  GPIO3
  mosi_pin: GPIO2

i2c:
  sda:       43
  scl:       44
  scan:      true
  frequency: 400kHz

font:
  - file: "fonts/OCRAEXT.ttf"
    id:   fontocra
    size: 42

output:
  - platform: ledc
    pin:      GPIO10
    inverted: true
    id:       backlightdim

light:
  - platform: monochromatic
    output:   backlightdim
    name:     "Backlight"

time:
  - platform: homeassistant
    id:       home_time
    timezone: America/Denver

display:
  - platform:      st7789v
    model:         Custom
    width:         128
    height:        128
    offset_width:  1
    offset_height: 2
    cs_pin:        GPIO5
    dc_pin:        GPIO6
    reset_pin:     GPIO1
    id:            disp
    rotation:      180
    lambda:        |-
                   it.strftime(0, 0, id(fontocra), TextAlign::TOP_LEFT, "%H:%M", id(home_time).now());
                   it.line(0, 50, 127, 50);

# Enable Wi-Fi.
wifi:
  !include Components/Core/wifi.yaml

# Enable the Home Assistant native API.
api:
  !include Components/Core/api.yaml

# Enable OTA updates.
ota:
  !include Components/Core/ota.yaml

# Enable logging.
logger:
  !include Components/Core/logger.yaml

# Enable MQTT publishing.
mqtt:
  !include Components/Core/mqtt.yaml

# Enable various sensors.
sensor:
  - !include Components/Sensors/wifi_signal.yaml
  - !include Components/Sensors/wifi_signal_percent.yaml
  - !include Components/Sensors/uptime.yaml

# The text_sensor handles many MQTT publishing duties.
text_sensor:
  - !include Components/TextSensor/wifi_info.yaml

# The interval component handles many MQTT publishing duties.
interval:
  !include Components/Core/interval.yaml

# Enable the onboard LED as diagnostic output.
status_led:
  !include Components/Core/status_led.yaml

# Expose the node state for Home Assistant.
binary_sensor:
  - !include Components/BinarySensors/status.yaml
